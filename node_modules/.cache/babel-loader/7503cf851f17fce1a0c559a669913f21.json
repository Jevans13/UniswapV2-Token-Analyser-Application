{"ast":null,"code":"import _objectSpread from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/src/components/TokenPrice.jsx\",\n    _templateObject,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport { Stat, StatLabel, StatNumber, StatHelpText, StatArrow, HStack, Alert, useToast, AlertIcon, Text } from \"@chakra-ui/react\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport gql from 'graphql-tag';\nimport Navbar from '../components/Navbar.js';\nexport var client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n  }),\n  fetchOptions: {\n    mode: 'no-cors'\n  },\n  cache: new InMemoryCache()\n});\n\nfunction AvgPrice(totalDataPast) {\n  var total = 0;\n\n  for (var i = 0; i < totalDataPast.length; i++) {\n    total += parseInt(totalDataPast[i][1] * 100) / 100;\n  }\n\n  var avg = total / totalDataPast.length;\n  return avg;\n}\n\n_c = AvgPrice;\n\nfunction statArrow(props) {\n  if (props < 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"1D\", /*#__PURE__*/React.createElement(StatArrow, {\n      type: \"decrease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, \"1D\", /*#__PURE__*/React.createElement(StatArrow, {\n      type: \"increase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }\n    }));\n  }\n}\n\nfunction alertHandler(props) {\n  if (props === 0) {\n    return /*#__PURE__*/React.createElement(Alert, {\n      status: \"alert\",\n      variant: \"subtle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(AlertIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \" Select timeframe to initialise data\"));\n  }\n}\n\nvar tokenDay_QUERY = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  query \\n  tokens($tokenAddress: Bytes!){\\n    tokenDayDatas(first:365 orderBy: date, orderDirection: desc,\\n    where: {\\n      token: $tokenAddress\\n    }\\n\\n    skip: 0) {\\n      id\\n      token {\\n        symbol\\n        name\\n        id\\n      }\\n      date\\n      priceUSD\\n      totalLiquidityToken\\n      totalLiquidityUSD\\n      totalLiquidityETH\\n      dailyVolumeETH\\n      dailyVolumeToken\\n      dailyVolumeUSD\\n    }\\n  }\\n  \"])));\n\nvar TokenPrice = function TokenPrice(props) {\n  _s();\n\n  var tokID = props.tokID;\n  var time1 = props.time;\n  var toast = useToast();\n\n  var _useState = useState(365),\n      _useState2 = _slicedToArray(_useState, 2),\n      time = _useState2[0],\n      setTime = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoadingPage = _useState4[0],\n      setIsLoadingPage = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      timeW = _useState6[0],\n      setTimeW = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      totalData = _useState8[0],\n      setData = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      totalDataYday = _useState10[0],\n      setDataYday = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      totalDataPast = _useState12[0],\n      setDataPast = _useState12[1];\n\n  var _useQuery = useQuery(tokenDay_QUERY, {\n    variables: {\n      tokenAddress: tokID\n    }\n  }),\n      dayLoading = _useQuery.loading,\n      dayData = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  useEffect(function () {\n    refetch();\n  }, [tokID]);\n  useEffect(function () {\n    if (time1 === 1) {\n      setTime(7);\n      setTimeW('1W');\n    }\n\n    if (time1 === 2) {\n      setTime(30);\n      setTimeW('1M');\n    }\n\n    if (time1 === 3) {\n      setTime(365);\n      setTimeW('1Y');\n    }\n  }, [time1]);\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios('https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses=' + tokID + '&vs_currencies=usd&include_market_cap=true');\n\n              case 3:\n                result = _context.sent;\n                setData(result.data[tokID]);\n                setIsLoadingPage(true);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                return _context.abrupt(\"return\", toast({\n                  title: \"Error fetching price data for this token\",\n                  status: \"error\",\n                  duration: 9000,\n                  isClosable: true\n                }));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios('https://api.coingecko.com/api/v3/coins/ethereum/contract/' + tokID + '/market_chart/?vs_currency=usd&days=1');\n\n              case 3:\n                result = _context2.sent;\n                setDataYday(result.data.prices[0][1]);\n                setIsLoadingPage(true);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios('https://api.coingecko.com/api/v3/coins/ethereum/contract/' + tokID + '/market_chart/?vs_currency=usd&days=' + time);\n\n              case 3:\n                result = _context3.sent;\n                setDataPast(result.data.prices);\n                setIsLoadingPage(true);\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 8]]);\n      }));\n\n      return function fetchData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    setIsLoadingPage(false);\n    fetchData();\n  }, [time]);\n  var average = AvgPrice(totalDataPast);\n  var dayChangePrice = (totalData.usd / totalDataYday - 1) * 100;\n  var dataL = dayData && dayData.tokenDayDatas.length;\n  var totalVol = 0;\n\n  for (var k = 0; k < dataL; k++) {\n    var data = dayData && dayData.tokenDayDatas[k].dailyVolumeUSD;\n    totalVol += parseFloat(data);\n  }\n\n  ;\n  var avgVol = totalVol / dataL;\n\n  if (typeof totalData.usd === \"undefined\") {\n    return _objectSpread({}, isLoadingPage ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }\n    }, \"Loading ...\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(Alert, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }\n    }, \"Price data for this token cannot be found - this may be due to the token being new. Consider researching\")));\n  } else if (parseFloat(totalData.usd > 0.1)) {\n    return _objectSpread({}, isLoadingPage ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, \"Loading ...\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HStack, {\n      spacing: \"50px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Stat, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StatLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }\n    }, \"Price \"), /*#__PURE__*/React.createElement(StatNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }\n    }, \"$\", parseFloat(totalData.usd).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')), /*#__PURE__*/React.createElement(StatHelpText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 4\n      }\n    }, statArrow(dayChangePrice), dayChangePrice.toFixed(1) + \"%\")), /*#__PURE__*/React.createElement(Stat, {\n      color: \"purple\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(StatLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }\n    }, \"Average Price: \"), /*#__PURE__*/React.createElement(StatNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 6\n      }\n    }, \"$\", parseFloat(average).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','))), /*#__PURE__*/React.createElement(Stat, {\n      color: \"purple\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(StatLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }\n    }, \"Average Daily Volume: \"), /*#__PURE__*/React.createElement(StatNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, \"$\", parseFloat(avgVol).toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')))), alertHandler(average)));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HStack, {\n      spacing: \"50px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Stat, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StatLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 5\n      }\n    }, \"Price \"), /*#__PURE__*/React.createElement(StatNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }\n    }, \"$\", parseFloat(totalData.usd).toFixed(5).toString()), /*#__PURE__*/React.createElement(StatHelpText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 5\n      }\n    }, statArrow(dayChangePrice), dayChangePrice.toFixed(1) + \"%\")), /*#__PURE__*/React.createElement(Stat, {\n      color: \"purple\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(StatLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }\n    }, \"Average Price: \", timeW), /*#__PURE__*/React.createElement(StatNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 6\n      }\n    }, \"$\", parseFloat(average).toFixed(5).toString())), /*#__PURE__*/React.createElement(Stat, {\n      color: \"purple\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(StatLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 5\n      }\n    }, \"Average Daily Volume: \", timeW, \" \"), /*#__PURE__*/React.createElement(StatNumber, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 7\n      }\n    }, \"$\", parseFloat(avgVol).toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')))), alertHandler(average));\n  }\n};\n\n_s(TokenPrice, \"ryJ0/nzykqcnieoiyemYVshm/2U=\", false, function () {\n  return [useToast, useQuery];\n});\n\n_c2 = TokenPrice;\nexport default TokenPrice;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AvgPrice\");\n$RefreshReg$(_c2, \"TokenPrice\");","map":{"version":3,"sources":["/Users/jackevans/Documents/GitHub/ULA-MScCompSci/src/components/TokenPrice.jsx"],"names":["axios","React","useState","useEffect","Stat","StatLabel","StatNumber","StatHelpText","StatArrow","HStack","Alert","useToast","AlertIcon","Text","useQuery","ApolloClient","HttpLink","InMemoryCache","gql","Navbar","client","link","uri","fetchOptions","mode","cache","AvgPrice","totalDataPast","total","i","length","parseInt","avg","statArrow","props","alertHandler","tokenDay_QUERY","TokenPrice","tokID","time1","time","toast","setTime","isLoadingPage","setIsLoadingPage","timeW","setTimeW","totalData","setData","totalDataYday","setDataYday","setDataPast","variables","tokenAddress","dayLoading","loading","dayData","data","refetch","fetchData","result","title","status","duration","isClosable","prices","console","log","average","dayChangePrice","usd","dataL","tokenDayDatas","totalVol","k","dailyVolumeUSD","parseFloat","avgVol","toFixed","toString","replace"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, {useState, useEffect} from \"react\";\nimport {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  HStack,\n  Alert,\n  useToast,\n  AlertIcon,\n  Text\n} from \"@chakra-ui/react\"\n  import { useQuery } from '@apollo/react-hooks'\nimport { ApolloClient } from 'apollo-client'\n  import { HttpLink } from 'apollo-link-http'\n  import { InMemoryCache } from 'apollo-cache-inmemory'\n  import gql from 'graphql-tag'\n  import Navbar from '../components/Navbar.js'\n\n\n  export const client = new ApolloClient({\n    link: new HttpLink({\n      uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n    }),\n    fetchOptions: {\n      mode: 'no-cors'\n    },\n    cache: new InMemoryCache()\n  })\n\nfunction AvgPrice(totalDataPast){\n  var total = 0;\n  for(var i = 0; i < totalDataPast.length; i++) {\n    total += parseInt(totalDataPast[i][1] * 100) / 100;\n  }\n  var avg = total / totalDataPast.length;\n  return avg;\n}\n\nfunction statArrow(props){\n      if (props<0){\n        return (\n        <div>1D<StatArrow type=\"decrease\"/></div>\n       )  \n      }\n      else{\n        return <div>1D<StatArrow type=\"increase\"/></div>\n      }\n  }\n\n\n  function alertHandler(props){\n      if (props===0){\n        return (\n         <Alert status=\"alert\" variant=\"subtle\">\n        <AlertIcon />\n      <Text> Select timeframe to initialise data</Text>\n       </Alert>)}}\n\n    const tokenDay_QUERY = gql`\n  query \n  tokens($tokenAddress: Bytes!){\n    tokenDayDatas(first:365 orderBy: date, orderDirection: desc,\n    where: {\n      token: $tokenAddress\n    }\n\n    skip: 0) {\n      id\n      token {\n        symbol\n        name\n        id\n      }\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n    }\n  }\n  `\n\nconst TokenPrice = (props) => {\n\n\tconst tokID = props.tokID;\n  const time1 = props.time;\n  \n  const toast = useToast();\n\tconst [time, setTime] = useState(365)\n\tconst [isLoadingPage, setIsLoadingPage] = useState(false);\n  const [timeW, setTimeW] = useState('')\n\tconst [totalData, setData] = useState([]);\n\tconst [totalDataYday, setDataYday] = useState();\n\tconst [totalDataPast, setDataPast] = useState([]);\n\n\n  const { loading: dayLoading, data: dayData, refetch } = useQuery(tokenDay_QUERY,\n        { variables: {tokenAddress: tokID}});\n\n  useEffect(() => { refetch() }, [tokID])\n\n\tuseEffect(() => { if(time1===1){\n        setTime(7)\n        setTimeW('1W')\n      }\n       if(time1===2){\n        setTime(30)\n        setTimeW('1M')\n      }\n       if(time1===3){\n        setTime(365)\n        setTimeW('1Y')\n      } }, [time1])\n\t  \n\tuseEffect(() => { \n\t\tconst fetchData = async () => {\n      try{\n    const result = await axios('https://api.coingecko.com/api/v3/simple/token_price/ethereum?contract_addresses='\n      +tokID+\n      '&vs_currencies=usd&include_market_cap=true')\n    setData(result.data[tokID])\n    setIsLoadingPage(true)\n }\n   catch (error) {\n       return(toast({\n          title: \"Error fetching price data for this token\",\n          status: \"error\",\n          duration: 9000,\n          isClosable: true,\n        })\n       )\n    }\n}\n  fetchData();\n}, []);\n\n\n\tuseEffect(() => { \n\t\tconst fetchData = async () => {\n      try{\n    const result = await axios('https://api.coingecko.com/api/v3/coins/ethereum/contract/'+tokID+'/market_chart/?vs_currency=usd&days=1')\n    setDataYday(result.data.prices[0][1])\n    setIsLoadingPage(true)   \n  }\n  catch(error){\n    console.log(error)\n  }}\n  fetchData();\n}, []);\n\n\tuseEffect(() => { \n\t\tconst fetchData = async () => {\n      try{\n    const result = await axios('https://api.coingecko.com/api/v3/coins/ethereum/contract/'\n      +tokID+'/market_chart/?vs_currency=usd&days='+time)\n    setDataPast(result.data.prices);\n    setIsLoadingPage(true)\n  }\n  catch(error){\n    console.log(error)\n  }}\n  setIsLoadingPage(false)\n  fetchData();\n}, [time]);\n\nvar average = AvgPrice(totalDataPast);  \n\nconst dayChangePrice = ((totalData.usd/totalDataYday)-1)*100\n\nconst dataL = dayData && dayData.tokenDayDatas.length;\nvar totalVol = 0;\n\nfor (var k = 0; k < dataL; k++) {\nconst data = dayData && dayData.tokenDayDatas[k].dailyVolumeUSD\ntotalVol += parseFloat(data)\n};\n\nvar avgVol = totalVol/dataL\n\n\nif(typeof totalData.usd===\"undefined\"){\n  return(\n    {...isLoadingPage ? (\n        <p>Loading ...</p>\n      ) : (\n    <div>\n    <Navbar/>\n    <Alert>Price data for this token cannot be found - this may be due to the token being new. Consider researching</Alert>\n    </div>\n    )\n})}\n\nelse if(parseFloat(totalData.usd>0.1)){\n\treturn (\n\t\t\n\t\t{...isLoadingPage ? (\n        <p>Loading ...</p>\n      ) : (\n      <div>\n      <HStack spacing=\"50px\">\n      <Stat>\n    <StatLabel>Price </StatLabel>\n    <StatNumber>${parseFloat(totalData.usd).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</StatNumber>\n  \t<StatHelpText>\n    {statArrow(dayChangePrice)}\n      {dayChangePrice.toFixed(1)+\"%\"}\n    \n    </StatHelpText>\n  </Stat>\n  <Stat color=\"purple\">\n    <StatLabel>Average Price: </StatLabel>\n     <StatNumber>${parseFloat(average).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') }</StatNumber>\n\n     </Stat>\n     <Stat color=\"purple\">\n    <StatLabel>Average Daily Volume: </StatLabel>\n      <StatNumber>${parseFloat(avgVol).toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') }</StatNumber>  \n     </Stat>\n     </HStack>\n     {alertHandler(average)}\n  </div>\n\t\n\n\t)\n\t\n  })}\n\nelse{\n\n    return (\n    \n    \n      <div>\n      <HStack spacing=\"50px\">\n      <Stat>\n    <StatLabel>Price </StatLabel>\n    <StatNumber>${parseFloat(totalData.usd).toFixed(5).toString()}</StatNumber>\n    <StatHelpText>\n    {statArrow(dayChangePrice)}\n      {dayChangePrice.toFixed(1)+\"%\"}\n    \n    </StatHelpText>\n  </Stat>\n  <Stat color=\"purple\">\n    <StatLabel>Average Price: {timeW}</StatLabel>\n     <StatNumber>${parseFloat(average).toFixed(5).toString()}</StatNumber>\n\n     </Stat>\n     <Stat color=\"purple\">\n    <StatLabel>Average Daily Volume: {timeW} </StatLabel>\n      <StatNumber>${parseFloat(avgVol).toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</StatNumber>  \n     </Stat>\n     </HStack>\n     {alertHandler(average)}\n  </div>\n)\n  \n\n\n  }}\n\n\nexport default TokenPrice;\n"]},"metadata":{},"sourceType":"module"}