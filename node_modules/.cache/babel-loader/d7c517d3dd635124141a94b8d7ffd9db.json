{"ast":null,"code":"import _classCallCheck from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/jackevans/Documents/GitHub/ULA-MScCompSci/src/App.js\";\nimport React, { Component } from 'react';\nimport './components/App.css';\nimport { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from 'react-apollo';\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\n/*import Token from \"./routes/Token.jsx\"\nimport TopTokens from \"./routes/TopTokens.jsx\"\nimport TopPairs from \"./routes/TopPairs.jsx\"\nimport TokenPairs from \"./routes/TokenPairs.jsx\"\nimport InfoPage from \"./routes/InfoPage.jsx\"*/\n\nvar Token = /*#__PURE__*/React.lazy(_c = function _c() {\n  return import(\"./routes/Token.jsx\");\n});\n_c2 = Token;\nvar TopTokens = /*#__PURE__*/React.lazy(_c3 = function _c3() {\n  return import(\"./routes/TopTokens.jsx\");\n});\n_c4 = TopTokens;\nvar TopPairs = /*#__PURE__*/React.lazy(_c5 = function _c5() {\n  return import(\"./routes/TopPairs.jsx\");\n});\n_c6 = TopPairs;\nvar InfoPage = /*#__PURE__*/React.lazy(_c7 = function _c7() {\n  return import(\"./routes/InfoPage.jsx\");\n});\n_c8 = InfoPage;\nvar TokenPairs = /*#__PURE__*/React.lazy(_c9 = function _c9() {\n  return import(\"./routes/TokenPairs.jsx\");\n});\n_c10 = TokenPairs;\nvar MainPage = /*#__PURE__*/React.lazy(_c11 = function _c11() {\n  return import(\"./routes/index.jsx\");\n});\n_c12 = MainPage;\nexport var client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n  }),\n  fetchOptions: {\n    mode: 'no-cors'\n  },\n  cache: new InMemoryCache()\n});\nvar colors = {\n  brand: {\n    900: \"#E74884\",\n    800: \"#153e75\",\n    700: \"#2a69ac\"\n  }\n};\nvar theme = extendTheme({\n  colors: colors\n});\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ChakraProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ApolloProvider, {\n        client: client,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: MainPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/Token\",\n        component: Token,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/top-pairs\",\n        component: TopPairs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/top-tokens\",\n        component: TopTokens,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/token-pairs\",\n        component: TokenPairs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/info\",\n        component: InfoPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n\n$RefreshReg$(_c, \"Token$React.lazy\");\n$RefreshReg$(_c2, \"Token\");\n$RefreshReg$(_c3, \"TopTokens$React.lazy\");\n$RefreshReg$(_c4, \"TopTokens\");\n$RefreshReg$(_c5, \"TopPairs$React.lazy\");\n$RefreshReg$(_c6, \"TopPairs\");\n$RefreshReg$(_c7, \"InfoPage$React.lazy\");\n$RefreshReg$(_c8, \"InfoPage\");\n$RefreshReg$(_c9, \"TokenPairs$React.lazy\");\n$RefreshReg$(_c10, \"TokenPairs\");\n$RefreshReg$(_c11, \"MainPage$React.lazy\");\n$RefreshReg$(_c12, \"MainPage\");","map":{"version":3,"sources":["/Users/jackevans/Documents/GitHub/ULA-MScCompSci/src/App.js"],"names":["React","Component","ApolloClient","InMemoryCache","HttpLink","BrowserRouter","Router","Route","Switch","ApolloProvider","ChakraProvider","extendTheme","Token","lazy","TopTokens","TopPairs","InfoPage","TokenPairs","MainPage","client","link","uri","fetchOptions","mode","cache","colors","brand","theme","App"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './components/App.css'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport { ApolloProvider } from 'react-apollo'\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\"\n\n\n/*import Token from \"./routes/Token.jsx\"\nimport TopTokens from \"./routes/TopTokens.jsx\"\nimport TopPairs from \"./routes/TopPairs.jsx\"\nimport TokenPairs from \"./routes/TokenPairs.jsx\"\nimport InfoPage from \"./routes/InfoPage.jsx\"*/\nconst Token = React.lazy(() => import(\"./routes/Token.jsx\"));\nconst TopTokens = React.lazy(() => import(\"./routes/TopTokens.jsx\"));\nconst TopPairs = React.lazy(() => import(\"./routes/TopPairs.jsx\"));\nconst InfoPage = React.lazy(() => import(\"./routes/InfoPage.jsx\"));\nconst TokenPairs = React.lazy(() => import(\"./routes/TokenPairs.jsx\"));\nconst MainPage = React.lazy(() => import(\"./routes/index.jsx\"));\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v2'\n  }),\n  fetchOptions: {\n    mode: 'no-cors'\n  },\n  cache: new InMemoryCache()\n})\n\nconst colors = {\n  brand: {\n    900: \"#E74884\",\n    800: \"#153e75\",\n    700: \"#2a69ac\",\n  },\n}\n\nconst theme = extendTheme({ colors })\n\nclass App extends Component {\n  render() {\n    return (\n      <ChakraProvider theme = {theme}>\n      <ApolloProvider client = {client}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route exact path=\"/Token\" component={Token} />\n          <Route exact path=\"/top-pairs\" component={TopPairs} />\n          <Route exact path=\"/top-tokens\" component={TopTokens} />\n          <Route exact path=\"/token-pairs\" component={TokenPairs} />\n          <Route exact path=\"/info\" component={InfoPage} />\n          </Switch>\n      </Router>\n      </ApolloProvider>\n      </ChakraProvider>\n\n\n\n\n    );\n  }\n}\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}